{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class RegisterService {\n  addRegistee(register) {\n    return this.http.post(this.registerUrl, register, httpOptions).pipe(catchError(this.handleError('addRegistee', register)));\n  }\n  static #_ = this.ɵfac = function RegisterService_Factory(t) {\n    return new (t || RegisterService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RegisterService,\n    factory: RegisterService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","catchError","httpOptions","headers","RegisterService","addRegistee","register","http","post","registerUrl","pipe","handleError","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\beauw\\OneDrive\\Desktop\\Repo\\the-god-squad\\src\\app\\services\\registration.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Register } from '../models/register.model';\r\nimport { Observable, catchError } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n  \r\n\r\n  addRegistee(register: Register): Observable<Register> {\r\n    return this.http.post<Register>(this.registerUrl, register, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError('addRegistee', register))\r\n      );\r\n  }\r\n\r\n}"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAAqBC,UAAU,QAAQ,MAAM;;AAG7C,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IACvB,cAAc,EAAG;GAClB;CACF;AAKD,OAAM,MAAOI,eAAe;EAG1BC,WAAWA,CAACC,QAAkB;IAC5B,OAAO,IAAI,CAACC,IAAI,CAACC,IAAI,CAAW,IAAI,CAACC,WAAW,EAAEH,QAAQ,EAAEJ,WAAW,CAAC,CACrEQ,IAAI,CACHT,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,aAAa,EAAEL,QAAQ,CAAC,CAAC,CACtD;EACL;EAAC,QAAAM,CAAA,G;qBARUR,eAAe;EAAA;EAAA,QAAAS,EAAA,G;WAAfT,eAAe;IAAAU,OAAA,EAAfV,eAAe,CAAAW,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}