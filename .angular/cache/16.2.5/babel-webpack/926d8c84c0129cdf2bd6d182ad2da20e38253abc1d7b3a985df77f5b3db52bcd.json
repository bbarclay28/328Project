{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { catchError } from 'rxjs';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let RegisterService = class RegisterService {\n  addRegistee(register) {\n    return this.http.post(this.registerUrl, register, httpOptions).pipe(catchError(this.handleError('addRegistee', register)));\n  }\n};\nRegisterService = __decorate([Injectable({\n  providedIn: 'root'\n})], RegisterService);","map":{"version":3,"names":["catchError","httpOptions","headers","HttpHeaders","RegisterService","addRegistee","register","http","post","registerUrl","pipe","handleError","__decorate","Injectable","providedIn"],"sources":["C:\\Users\\beauw\\OneDrive\\Desktop\\Repo\\the-god-squad\\src\\app\\services\\registration.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Register } from '../models/register.model';\r\nimport { Observable, catchError } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n  \r\n\r\n  addRegistee(register: Register): Observable<Register> {\r\n    return this.http.post<Register>(this.registerUrl, register, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError('addRegistee', register))\r\n      );\r\n  }\r\n\r\n}"],"mappings":";AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAE7C,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIC,WAAW,CAAC;IACvB,cAAc,EAAG;GAClB;CACF;AAKM,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAG1BC,WAAWA,CAACC,QAAkB;IAC5B,OAAO,IAAI,CAACC,IAAI,CAACC,IAAI,CAAW,IAAI,CAACC,WAAW,EAAEH,QAAQ,EAAEL,WAAW,CAAC,CACrES,IAAI,CACHV,UAAU,CAAC,IAAI,CAACW,WAAW,CAAC,aAAa,EAAEL,QAAQ,CAAC,CAAC,CACtD;EACL;CAED;AAVYF,eAAe,GAAAQ,UAAA,EAH3BC,UAAU,CAAC;EACVC,UAAU,EAAE;CACb,CAAC,C,EACWV,eAAe,CAU3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}